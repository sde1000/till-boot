#!/bin/bash

# This script runs inside the chroot to customise it.  It's invoked by
# build-rdir using systemd-nspawn.

# Only run if /root/scripts/chroot-setup exists, i.e. we are running in the
# chroot environment
test -e /root/scripts/chroot-setup || exit 1

echo "Start of chroot-setup"

source /etc/os-release

# Don't ask any questions...
debconf-set-selections <<EOF
debconf	debconf/frontend	select	Noninteractive
EOF

echo " --> generating locales"
debconf-set-selections <<EOF
locales	locales/locales_to_be_generated	multiselect	en_GB.UTF-8 UTF-8, en_US.UTF-8 UTF-8
locales	locales/default_environment_locale	select	en_GB.UTF-8
EOF
apt-get -q -y install locales
dpkg-reconfigure -u locales

echo " --> setting timezone"
debconf-set-selections <<EOF
tzdata tzdata/Areas select Europe
tzdata tzdata/Zones/Europe select London
EOF
echo Europe/London >/etc/timezone
dpkg-reconfigure -u tzdata

echo " --> refreshing package cache"
apt-get -q update

echo " --> installing dbus"
apt-get -q -y install dbus

echo " --> doing dist-upgrade"
apt-get -q -y dist-upgrade

case "${ID}" in
    raspbian|debian)
	echo " --> enabling systemd-networkd and systemd-resolved"
	systemctl enable systemd-networkd
	systemctl enable systemd-resolved
	echo " --> installing live-boot"
	apt-get -q -y install live-boot
	;;
    ubuntu)
	echo " --> installing network-manager"
	apt-get -q --no-install-recommends -y install network-manager

	echo " --> installing casper"
	apt-get -q --no-install-recommends -y install casper
	;;
esac

echo " --> choosing UK keyboard"
# Choose a UK keyboard...
cat >/etc/default/keyboard <<EOF
XKBMODEL="pc105"
XKBLAYOUT="gb"
XKBVARIANT=""
XKBOPTIONS=""
EOF

echo " --> blacklisting display drivers"
# Blacklist display drivers here - stay in text mode if we can!
# vga16fb puts tills in modes that some LCD monitors can't auto-detect
echo blacklist vga16fb >/etc/modprobe.d/blacklist-till.conf

echo " --> setting up initramfs for network boot"
# Setup initramfs for network boot
cp /etc/initramfs-tools/initramfs.conf /root/
sed -e 's/^MODULES=.*$/MODULES=netboot/' \
    -e '$a\RESUME=none' \
  </root/initramfs.conf >/etc/initramfs-tools/initramfs.conf
rm /root/initramfs.conf
echo blacklist vga16fb >>/etc/initramfs-tools/modules

# Experimental: set managed=true in /etc/NetworkManager/NetworkManager.conf
#cp /etc/NetworkManager/NetworkManager.conf /etc/NetworkManager/NetworkManager.conf.old
#sed s/managed=false/managed=true/ \
#    </etc/NetworkManager/NetworkManager.conf.old \
#    >/etc/NetworkManager/NetworkManager.conf


echo " --> adding till user"
adduser --add_extra_groups --gecos Till --disabled-password till
adduser till adm
adduser till sudo
adduser till lpadmin
adduser till lp
passwd -d till
passwd -d root

echo " --> copying setup script to /usr/local/sbin/"
install -m 755 /root/scripts/tillsetup.py /usr/local/sbin/tillsetup

echo " --> adding run-till script to till user's home directory"
install -m 755 -o till -g till /root/scripts/runtill /home/till/runtill

echo " --> adding set-printserver script to till user's home directory"
install -m 755 -o till -g till /root/scripts/set-printserver.sh /home/till/set-printserver.sh

echo " --> updating till user's .profile"
cat /root/scripts/profile-fragment >>/home/till/.profile

echo " --> setting up autologin on tty1"
install -m 755 /root/scripts/login-till /usr/local/bin/
mkdir -p /etc/systemd/system/getty\@tty1.service.d
cat >/etc/systemd/system/getty\@tty1.service.d/override.conf <<EOF
[Service]
ExecStart=
ExecStart=-/sbin/agetty --8bits --noissue --skip-login --login-program /usr/local/bin/login-till --noclear %I \$TERM
EOF

case "${ID}" in
    raspbian|debian)
	echo " --> setting up live-boot and live-config"
	echo "     (nothing to do)"
	;;
    ubuntu)
	echo " --> zapping unhelpful bits of casper"
	# Zap bits of casper that are doing unhelpful things!
	cat >/etc/casper.conf <<EOF
USERNAME=
USERFULLNAME=
HOST=till
BUILD_SYSTEM=Ubuntu
EOF
	#rm -f /usr/share/initramfs-tools/scripts/casper-bottom/02timezone
	rm -f /usr/share/initramfs-tools/scripts/casper-bottom/10adduser
	rm -f /usr/share/initramfs-tools/scripts/casper-bottom/25adduser
	# See https://bugs.launchpad.net/ubuntu/+source/casper/+bug/1755863 for
	# the below...
	rm -f /usr/share/initramfs-tools/scripts/casper-bottom/25disable_cdrom.mount
	#rm -f /usr/share/initramfs-tools/scripts/casper-bottom/15autologin
	#rm -f /usr/share/initramfs-tools/scripts/casper-bottom/25configure_init
	#rm -f /usr/share/initramfs-tools/scripts/casper-bottom/23networking
	;;
esac

echo " --> installing extra requested packages without recommendations"
apt-get -q -y --no-install-recommends install $(cat /root/extrainstall_norecommends)

echo " --> installing extra requested packages with recommendations"
apt-get -q -y install $(cat /root/extrainstall_recommends)

echo " --> setting udev rules for printers"
cat >/etc/udev/rules.d/60-epson.rules <<EOF
# Epson receipt printer
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="04b8", ATTRS{idProduct}=="0e03", SYMLINK+="epson-tm-t20"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="04b8", ATTRS{idProduct}=="0e15", SYMLINK+="epson-tm-t20ii"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="04b8", ATTRS{idProduct}=="0202", SYMLINK+="epson-tm-u220"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="0525", ATTRS{idProduct}=="a700", SYMLINK+="aures-odp-333"
EOF

echo " --> installing kernel"
case "${ID}" in
    raspbian)
	apt-get -q -y install raspberrypi-kernel raspberrypi-bootloader
	# The kernel is probably already installed, but we need to reconfigure
	# the package to generate the initrds...
	cat >/etc/default/raspberrypi-kernel <<EOF
# Defaults for raspberrypi-kernel

# Uncomment the following line to enable generation of
# /boot/initrd.img-KVER files (requires initramfs-tools)

INITRD=Yes

# Uncomment the following line to enable generation of
# /boot/initrd(7).img files (requires rpi-initramfs-tools)

#RPI_INITRD=Yes

EOF
	dpkg-reconfigure raspberrypi-kernel
	;;
    debian)
	case $(dpkg --print-architecture) in
	    amd64)
		apt-get -q -y --no-install-recommends install linux-image-amd64
		;;
	    i386)
		apt-get -q -y --no-install-recommends install linux-image-686
		;;
	    *)
		echo "Don't know which kernel package to install for this arch"
		;;
	esac
	;;
    ubuntu)
	apt-get -q -y --no-install-recommends install linux-generic-hwe-18.04
	;;
esac

echo " --> cleaning up package caches"
# Clean up package caches
apt-get -q clean
rm -rf /var/lib/apt/lists/*
dpkg --clear-avail

echo " --> setting up private repo list in till home directory"
rm -f /etc/apt/sources.list.d/till-boot.list
echo -n >/home/till/apt-sources.list
chown till.till /home/till/apt-sources.list
ln -s /home/till/apt-sources.list /etc/apt/sources.list.d/till-boot.list

echo "chroot-setup done"

#!/bin/bash

# New plan: multiple netboot images can be installed at the same time

# This is needed because terminals running using the loopback-mounted
# squashfs that's read over NFS will become Very Confused if the
# contents of the squashfs change underneath them.  The new squashfs
# must have a different filename, and the old squashfs must not be
# deleted until all the terminals have been rebooted.

# So, how do we manage this?

# Split the netboot images into two packages: One package contains the
# squashfs, kernel and initrd (the kernel and initrd are extracted
# from the squashfs by the postinst).  The package is named after its
# version, eg. its name could be till-boot-bionic-201803160106.  The
# other contains setup scripts and depends on the package containing
# the squashfs; its name will be till-boot-bionic.

# The kernel and initrd are compressed inside the squashfs, and need
# to be extracted by the postinst.

# squashfs package contents:
# /usr/share/till-boot/bionic/$version/casper/till.squashfs
# /usr/share/till-boot/bionic/$version/README.diskdefines
# squashfs package postinst generates:
# /var/lib/till-boot/bionic/version/vmlinuz
# /var/lib/till-boot/bionic/version/initrd.img

# generic package contents:
# /etc/till-boot/{various conffiles}
# /usr/bin/{script that puts files in the right places}
# depends on things like pxelinux, shim-signed, etc. and
# makes use of them

# Build-Depends:
# ipxe squashfs-tools
set -e

if [ ${UID} != 0 ]; then
  echo "This script must be run as root."
  exit 1
fi

distribution=bionic
arch=amd64
source=rdir
version=$(date +%Y%m%d%H%M%S)

# Build the .deb containing the squashfs

# Where to build the squashfs package
target=squashfs-package
usrshare_pkg=/usr/share/till-boot/$distribution/$arch/$version
varlib_pkg=/var/lib/till-boot/$distribution/$arch/$version
squashfs_pkg=$usrshare_pkg/casper/till.squashfs

usrshare=${target}${usrshare_pkg}
varlib=${target}${varlib_pkg}
squashfs=${target}${squashfs_pkg}

rm -rf $target
mkdir -m 755 -p $usrshare/casper $varlib
mksquashfs $source $squashfs -noappend
chmod 644 $squashfs
install -m 644 README.diskdefines ${usrshare}/
install -m 644 filesystem.manifest ${usrshare}/

# The installed size will be the size of the files in /usr/share plus
# the kernel and initrd once they are extracted from the squashfs
size=$(du --total $usrshare $source/boot/initrd.img-* $source/boot/vmlinuz-* \
	  | sed '$!d' | cut -f 1)

mkdir -p $target/DEBIAN
find $target -type f -print0 | xargs -0 md5sum >$target/DEBIAN/md5sums
cat >$target/DEBIAN/control <<EOF
Package: till-boot-${distribution}-${arch}-${version}
Version: ${version}
Architecture: all
Maintainer: Stephen Early <steve@assorted.org.uk>
Installed-Size: ${size}
Depends: squashfs-tools
Priority: optional
Description: Filesystem, kernel and initrd for network boot for quicktill
EOF

cat >$target/DEBIAN/postinst <<EOF
#!/bin/bash

set -e

# On configure, extract the kernel and initrd from the squashfs
if [ "\$1" = "configure" ]; then
  unsquashfs -n -d ${varlib_pkg}/tmp ${squashfs_pkg} "boot/initrd.img-*" "boot/vmlinuz-*"
  mv ${varlib_pkg}/tmp/boot/initrd.img-* ${varlib_pkg}/initrd.img
  mv ${varlib_pkg}/tmp/boot/vmlinuz-* ${varlib_pkg}/vmlinuz
  chmod 644 ${varlib_pkg}/vmlinuz
  rm -r ${varlib_pkg}/tmp
fi
EOF
chmod 755 $target/DEBIAN/postinst

cat >$target/DEBIAN/prerm <<EOF
#!/bin/bash

set -e

# On upgrade or remove, delete the kernel and initrd that were extracted
# from the squashfs by the postinst

if [ \\( "\$1" = "upgrade" -o "\$1" = "remove" \\) ]; then
  rm -f ${varlib_pkg}/initrd.img ${varlib_pkg}/vmlinuz
  rm -rf ${varlib_pkg}/tmp
fi
EOF
chmod 755 $target/DEBIAN/prerm

dpkg-deb -Znone -b $target .


# Build the till-boot package that deals with configuration and setup.
# This package includes ipxe copied from the build system, so it's
# usable on tills that are not amd64 architecture
target=config-package
share_pkg=/usr/share/till-boot/loaders/${arch}
etc_pkg=/etc/till-boot
sbin_pkg=/usr/sbin
doc_pkg=/usr/share/doc/till-boot
setup_script_pkg=${sbin_pkg}/till-boot-setup-${arch}

share=${target}${share_pkg}
etc=${target}${etc_pkg}
sbin=${target}${sbin_pkg}
doc=${target}${doc_pkg}
setup_script=${target}${setup_script_pkg}

rm -rf $target
mkdir -m 755 -p $etc $sbin $share
install -m 755 scripts/till-boot-setup.py $setup_script

mkdir -m 755 -p $doc
install -m 644 example-config.yaml $doc/

install -m 644 /usr/lib/ipxe/ipxe.efi $share/
install -m 644 /usr/lib/ipxe/ipxe.pxe $share/

find $target -type f -print0 | xargs -0 md5sum >md5sums
size=$(du -s $target | cut -f 1)
mkdir -p $target/DEBIAN

cat >$target/DEBIAN/control <<EOF
Package: till-boot-${distribution}-${arch}
Version: ${version}
Architecture: all
Maintainer: Stephen Early <steve@assorted.org.uk>
Installed-Size: ${size}
Depends: till-boot-${distribution}-${arch}-${version}, tftpd-hpa, nfs-kernel-server, python3, python3-yaml
Conflicts: till-boot-precise, till-boot-trusty, till-boot-xenial
Replaces: till-boot-precise, till-boot-trusty, till-boot-xenial
Priority: optional
Description: quicktill netboot for ${arch} clients
EOF

cat >$target/DEBIAN/postinst <<EOF
#!/bin/bash

set -e

if [ "\$1" = "configure" ]; then
  test -f /etc/till-boot/config && ${setup_script_pkg} ${distribution} ${arch} ${version} || echo "Config file /etc/till-boot/config not present - skipping config"
fi
EOF
chmod 755 $target/DEBIAN/postinst

mv md5sums $target/DEBIAN/

dpkg-deb -b $target .

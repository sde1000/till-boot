#!/bin/bash

# Multiple netboot images can be installed at the same time

# This is needed because terminals running using the loopback-mounted
# squashfs that's read over NFS will become Very Confused if the
# contents of the squashfs change underneath them.  The new squashfs
# must have a different filename, and the old squashfs must not be
# deleted until all the terminals have been rebooted.

# Build-Depends:
# squashfs-tools
set -e

if [ "$#" != "5" ]; then
    echo "usage: build-deb platform arch boot-type source-dir version"
    exit 1
fi

platform=$1
arch=$2
boot=$3
source=$4
version=$5

if [ ${UID} != 0 ]; then
  echo "This script must be run as root."
  exit 1
fi

# Build the .deb containing the squashfs

# Where to build the squashfs package
target=squashfs-package-${platform}-${arch}-${version}
usrshare_pkg=/usr/share/till-boot/${platform}/${arch}/${version}
varlib_pkg=/var/lib/till-boot/${platform}/${arch}/${version}
squashfs_pkg=${usrshare_pkg}/${boot}/till.squashfs

usrshare=${target}${usrshare_pkg}
varlib=${target}${varlib_pkg}
squashfs=${target}${squashfs_pkg}

rm -rf $target
mkdir -m 755 -p $usrshare/${boot} $varlib
mksquashfs $source $squashfs -noappend
chmod 644 $squashfs
for i in ${source}-* ; do
    tail=${i#"${source}-"}
    install -m 644 ${i} ${usrshare}/${tail}
done

# The installed size will be the size of the files in /usr/share plus
# the /boot tree once they are extracted from the squashfs
size=$(du --total $usrshare $source/boot/ | sed '$!d' | cut -f 1)

mkdir -p $target/DEBIAN
find $target -type f -print0 | xargs -0 md5sum >$target/DEBIAN/md5sums
cat >$target/DEBIAN/control <<EOF
Package: till-boot-${platform}-${arch}-${version}
Version: 1
Architecture: all
Maintainer: Stephen Early <steve@assorted.org.uk>
Installed-Size: ${size}
Depends: squashfs-tools
Priority: optional
Description: quicktill netboot for ${platform}-${arch} clients
EOF

cat >$target/DEBIAN/postinst <<EOF
#!/bin/bash

set -e

# On configure, extract the boot files from the squashfs
if [ "\$1" = "configure" ]; then
  unsquashfs -n -d ${varlib_pkg}/tmp ${squashfs_pkg} "boot/*" >/dev/null
  # Make sure everything is readable
  chmod -R a+rX ${varlib_pkg}/tmp/boot
  mv ${varlib_pkg}/tmp/boot ${varlib_pkg}/
  rm -rf ${varlib_pkg}/tmp
fi
EOF
chmod 755 $target/DEBIAN/postinst

cat >$target/DEBIAN/prerm <<EOF
#!/bin/bash

set -e

# On upgrade or remove, delete the boot files that were extracted
# from the squashfs by the postinst

if [ \\( "\$1" = "upgrade" -o "\$1" = "remove" \\) ]; then
  rm -rf ${varlib_pkg}/boot ${varlib_pkg}/tmp
fi
EOF
chmod 755 $target/DEBIAN/prerm

dpkg-deb -Znone -b $target .


# Build the till-boot package that depends on the version-specific
# package we just built.
target=dep-package-${platform}-${arch}-${version}

rm -rf $target
mkdir $target

find $target -type f -print0 | xargs -0 md5sum >md5sums
size=$(du -s $target | cut -f 1)
mkdir -p $target/DEBIAN

cat >$target/DEBIAN/control <<EOF
Package: till-boot-${platform}-${arch}
Version: ${version}
Architecture: all
Maintainer: Stephen Early <steve@assorted.org.uk>
Installed-Size: ${size}
Depends: till-boot-${platform}-${arch}-${version}, till-boot-config (>= 5)
Priority: optional
Description: quicktill netboot for ${platform}-${arch} clients
EOF

mv md5sums $target/DEBIAN/

dpkg-deb -b $target .

#!/bin/bash

set -e

if [ ${UID} != 0 ]; then
  echo "This script must be run as root."
  exit 1
fi

# Address of pub company's apt repository to be baked into the image
repoaddr=http://www.individualpubs.co.uk/software

distribution=xenial

arch=i386

# Don't install quicktill; we fetch that on each boot because it may
# be harmful to install an old version.  install=quicktill2 is needed
# as a kernel command line argument.
extrainstall="postgresql-client openssh-client ntp fbset acpid cups-bsd cups cups-browsed python3-psycopg2 python3-reportlab python3-httplib2 python3-qrcode python3-sqlalchemy python3-yaml quicktill-nfc-bridge oidentd usbutils pciutils python3-cups python3-odf telnet strace tcpdump python3-twython python3-oauthlib python3-requests python3-matplotlib"

target=./rdir

export http_proxy=http://localhost:3142/
source=http://gb.archive.ubuntu.com/ubuntu/

rm -rf $target
mkdir $target

debootstrap --arch=${arch} $distribution $target $source 2>&1

# Seed the target with some useful files
cat >$target/etc/default/locale <<EOF
LANG="en_GB.UTF-8"
EOF

cat >$target/etc/apt/apt.conf.d/40proxy <<EOF
Acquire::http::Proxy "$http_proxy";
EOF
cat >$target/etc/apt/sources.list <<EOF
deb http://gb.archive.ubuntu.com/ubuntu $distribution main restricted universe multiverse
deb http://gb.archive.ubuntu.com/ubuntu $distribution-updates main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu $distribution-security main restricted universe multiverse
deb $repoaddr $distribution-tills main
EOF

# Copy the setup script into the target
cp chroot-setup $target/root/
cp repo-signing-key.gpg $target/root/
echo $extrainstall >$target/root/extrainstall

# Invoke the setup script in the target
systemd-nspawn -D $target/ -a /root/chroot-setup

# Clean up
rm $target/root/extrainstall
rm $target/root/repo-signing-key.gpg
rm $target/root/chroot-setup

# Leave only our private repository in the apt sources list
cat >$target/etc/apt/sources.list <<EOF
deb $repoaddr $distribution-tills main
deb-src $repoaddr $distribution-tills main
EOF
# Don't use our local proxy to fetch packages any more
rm $target/etc/apt/apt.conf.d/40proxy

# We need to copy the kernel and initrd to outside the target because
# they will be installed on the network boot server.
cp $target/vmlinuz till-vmlinuz
chmod 644 till-vmlinuz
# Grr, the symlink to the initrd image starts with a '/'
chroot $target cp initrd.img foo
mv $target/foo till-initrd.img

# Zap /etc/resolv.conf - a new one will be generated on boot by casper
rm -f $target/etc/resolv.conf

# The diskless terminal thinks it is called "till".  The real till is
# probably also called "till".  Look at the DNS first to get the right answer!
sed "s/files dns/dns files/" <$target/etc/nsswitch.conf >$target/etc/nsswitch.conf.new
mv $target/etc/nsswitch.conf.new $target/etc/nsswitch.conf

# For some reason the "lp" module is not loaded automatically, so
# we have to add it to /etc/modules here
echo lp >>$target/etc/modules

# Add the script that fetches the till configuration
cp tillsetup.py $target/etc/init.d/tillsetup
chmod +x $target/etc/init.d/tillsetup
ln -s ../init.d/tillsetup $target/etc/rcS.d/S99tillsetup

# Zap the machine ID so it's regenerated on each reboot
rm $target/var/lib/dbus/machine-id

# Build the manifest file
chroot $target dpkg-query -W --showformat='${Package} ${Version}\n' >filesystem.manifest
# Diskdefines
cat >README.diskdefines <<EOF
#define DISKNAME  IPL Till Netboot Xenial
#define TYPE  binary
#define TYPEbinary  1
#define ARCH  ${arch}
#define ARCH${arch}  1
#define DISKNUM  1
#define DISKNUM1  1
#define TOTALNUM  0
#define TOTALNUM0  1
EOF

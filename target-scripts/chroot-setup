#!/bin/bash

# This script runs inside the chroot to customise it.  It's invoked by
# build-rdir using systemd-nspawn.

# Only run if /root/scripts/chroot-setup exists, i.e. we are running in the
# chroot environment
test -e /root/scripts/chroot-setup || exit 1

echo "Start of chroot-setup"

source /root/chroot-config
source /etc/os-release

# Raspberry armhf requires arm64 packages to be supported as well for
# the kernel used on PI4.
if [ "${arch}" = "armhf" ]; then
    dpkg --add-architecture arm64
fi

if [ "${ID}" = "ubuntu" ]; then
    # Ubuntu leaves /etc/resolv.conf pointing at
    # /run/systemd/resolve/stub-resolv.conf which does not exist
    rm -f /etc/resolv.conf
    ln -s /lib/systemd/resolv.conf /etc/
fi

# Don't ask any questions...
debconf-set-selections <<EOF
debconf	debconf/frontend	select	Noninteractive
EOF

echo " --> generating locales"
debconf-set-selections <<EOF
locales	locales/locales_to_be_generated	multiselect	en_GB.UTF-8 UTF-8, en_US.UTF-8 UTF-8
locales	locales/default_environment_locale	select	en_GB.UTF-8
EOF
apt-get -q -y install locales
rm -f /etc/locale.gen # Needed on Ubuntu
dpkg-reconfigure -u locales

echo " --> setting timezone"
debconf-set-selections <<EOF
tzdata tzdata/Areas select Europe
tzdata tzdata/Zones/Europe select London
EOF
echo Europe/London >/etc/timezone
dpkg-reconfigure -u tzdata

echo " --> refreshing package cache"
apt-get -q update

echo " --> installing dbus"
apt-get -q -y install dbus

echo " --> doing dist-upgrade"
apt-get -q -y dist-upgrade

echo " --> enabling systemd-networkd and systemd-resolved"
systemctl enable systemd-networkd
systemctl enable systemd-resolved

echo " --> choosing UK keyboard"
# Choose a UK keyboard...
cat >/etc/default/keyboard <<EOF
XKBMODEL="pc105"
XKBLAYOUT="gb"
XKBVARIANT=""
XKBOPTIONS=""
EOF

echo " --> blacklisting display drivers"
# Blacklist display drivers here - stay in text mode if we can!
# vga16fb puts tills in modes that some LCD monitors can't auto-detect
echo blacklist vga16fb >/etc/modprobe.d/blacklist-till.conf

echo " --> adding till user"
adduser --add_extra_groups --gecos Till --disabled-password till
adduser till adm
adduser till sudo
# lpadmin doesn't exist on Debian trixie
# adduser till lpadmin
adduser till lp
passwd -d till
passwd -d root

echo " --> adding python scripts to till user's home directory"
install -m 755 -o till -g till /root/scripts/{tillsetup,wayland-logout,display-browser}.py /home/till/

echo " --> adding mode scripts to till user's home directory"
install -m 755 -o till -g till /root/scripts/mode-*[^~] /home/till/

echo " --> adding shell scripts to till user's home directory"
install -m 755 -o till -g till /root/scripts/*.sh /home/till/

echo " --> updating till user's .profile"
cat /root/scripts/profile-fragment >>/home/till/.profile

echo " --> setting up autologin on tty1"
install -m 755 /root/scripts/login-till /usr/local/bin/
mkdir -p /etc/systemd/system/getty\@tty1.service.d
cat >/etc/systemd/system/getty\@tty1.service.d/override.conf <<EOF
[Service]
ExecStart=
ExecStart=-/sbin/agetty --8bits --noissue --skip-login --login-program /usr/local/bin/login-till --noclear %I \$TERM
EOF

echo " --> installing extra requested packages without recommendations"
apt-get -q -y --no-install-recommends install $(cat /root/extrainstall_norecommends) || exit 1

echo " --> installing extra requested packages with recommendations"
apt-get -q -y install $(cat /root/extrainstall_recommends) || exit 1

echo " --> configuring plymouth"
plymouth-set-default-theme spinner

echo " --> setting udev rules for printers"
cat >/etc/udev/rules.d/60-printer.rules <<EOF
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="04b8", ATTRS{idProduct}=="0e03", SYMLINK+="epson-tm-t20"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="04b8", ATTRS{idProduct}=="0e15", SYMLINK+="epson-tm-t20ii"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="04b8", ATTRS{idProduct}=="0202", SYMLINK+="epson-tm-u220"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="0525", ATTRS{idProduct}=="a700", SYMLINK+="aures-odp-333"
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="0922", ATTRS{idProduct}=="0020", SYMLINK+="dymo-labelwriter-450"
EOF

LIBCCID_CONFIG=/etc/libccid_Info.plist
if [ -f ${LIBCCID_CONFIG} ] ; then
    echo " --> updating libccid config"
    # set ifdDriverOptions to 0x0001 so quicktill-nfc-bridge can disable
    # card reader beeps
    /root/scripts/update-libccid-config.py ${LIBCCID_CONFIG} ${LIBCCID_CONFIG}
fi

echo " --> configuring journald for volatile storage"
mkdir -p /etc/systemd/journald.conf.d
cat >/etc/systemd/journald.conf.d/volatile.conf <<EOF
[Journal]
Storage=volatile
EOF

echo " --> setting up initramfs for network live boot"
# This is after extrainstall_* because initramfs-tools will only have been
# installed in that step on Raspberry
cp /etc/initramfs-tools/initramfs.conf /root/
sed -e 's/^MODULES=.*$/MODULES=netboot/' \
    -e 's/^BUSYBOX=.*$/BUSYBOX=y/' \
    -e '$a\RESUME=none' \
  </root/initramfs.conf >/etc/initramfs-tools/initramfs.conf
rm /root/initramfs.conf
echo blacklist vga16fb >>/etc/initramfs-tools/modules
cp /root/scripts/initramfs-live.hook /etc/initramfs-tools/hooks/live
cp /root/scripts/initramfs-live.script /etc/initramfs-tools/scripts/live

if [ -x "/usr/bin/ntpdig" ]; then
    echo " --> setting up initramfs for ntpdig"
    cp /root/scripts/initramfs-ntpdig.script /etc/initramfs-tools/scripts/init-bottom/ntpdig
fi

# This enables some services to delay their startup until after the
# clock is synchronized. It doesn't delay startup of (eg.) getty etc.
echo " --> enabling systemd-time-wait-sync.service"
systemctl enable systemd-time-wait-sync.service

echo " --> updating initramfs"
update-initramfs -k all -d
update-initramfs -k all -c

echo " --> cleaning up package caches"
# Clean up package caches
apt-get -q clean
rm -rf /var/lib/apt/lists/*
dpkg --clear-avail

echo " --> setting up private repo list in till home directory"
rm -f /etc/apt/sources.list.d/till-boot.list
echo -n >/home/till/apt-sources.list
chown till:till /home/till/apt-sources.list
ln -s /home/till/apt-sources.list /etc/apt/sources.list.d/till-boot.list

echo "chroot-setup done"
